{"ast":null,"code":"var _jsxFileName = \"/Users/reemabdulglilhassansaleh/Documents/chatbot/src/Newchat.js\";\n// import logo from './logo.svg';\nimport React from 'react';\nimport Navbar from \"./Components/NavBar/Navbar\";\n\n// import {GoogleGenerativeAI,HarmCategory,HarmBlockThreshold,} from \"@google/generative-ai\";\n\n//   function Newchat() {\n//   return (\n//     <div>\n//       <Navbar/>\n//     </div>\n\n//   )\n// }\n// export default Newchat;\n\n// node --version # Should be >= 18\n// npm install @google/generative-ai\n\nimport { GoogleGenerativeAI, HarmCategory, HarmBlockThreshold } from \"@google/generative-ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 7\n}, this);\nconst apiKey = \"AIzaSyDK1QaBfQA_oRqsi4sArV5jrJkqc5wT8FY\";\nconst MODEL_NAME = \"gemini-1.5-pro-latest\";\nconst API_KEY = apiKey;\nasync function newchat(prompt) {\n  const genAI = new GoogleGenerativeAI(API_KEY);\n  const model = genAI.getGenerativeModel({\n    model: MODEL_NAME\n  });\n  const generationConfig = {\n    temperature: 1,\n    topK: 0,\n    topP: 0.95,\n    maxOutputTokens: 8192\n  };\n  const safetySettings = [{\n    category: HarmCategory.HARM_CATEGORY_HARASSMENT,\n    threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE\n  }, {\n    category: HarmCategory.HARM_CATEGORY_HATE_SPEECH,\n    threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE\n  }, {\n    category: HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,\n    threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE\n  }, {\n    category: HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,\n    threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE\n  }];\n  const chat = model.startChat({\n    generationConfig,\n    safetySettings,\n    history: []\n  });\n  const result = await chat.sendMessage(prompt);\n  const response = result.response;\n  console.log(response.text());\n  return response.text();\n}\nexport default newchat;","map":{"version":3,"names":["React","Navbar","GoogleGenerativeAI","HarmCategory","HarmBlockThreshold","jsxDEV","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","apiKey","MODEL_NAME","API_KEY","newchat","prompt","genAI","model","getGenerativeModel","generationConfig","temperature","topK","topP","maxOutputTokens","safetySettings","category","HARM_CATEGORY_HARASSMENT","threshold","BLOCK_MEDIUM_AND_ABOVE","HARM_CATEGORY_HATE_SPEECH","HARM_CATEGORY_SEXUALLY_EXPLICIT","HARM_CATEGORY_DANGEROUS_CONTENT","chat","startChat","history","result","sendMessage","response","console","log","text"],"sources":["/Users/reemabdulglilhassansaleh/Documents/chatbot/src/Newchat.js"],"sourcesContent":["// import logo from './logo.svg';\nimport React from 'react';\nimport Navbar from \"./Components/NavBar/Navbar\";\n\n// import {GoogleGenerativeAI,HarmCategory,HarmBlockThreshold,} from \"@google/generative-ai\";\n\n\n//   function Newchat() {\n//   return (\n//     <div>\n//       <Navbar/>\n//     </div>\n   \n//   )\n// }\n// export default Newchat;\n\n\n\n// node --version # Should be >= 18\n// npm install @google/generative-ai\n\nimport {\n  GoogleGenerativeAI,\n  HarmCategory,\n  HarmBlockThreshold,\n} from \"@google/generative-ai\";\n      <div>\n    <Navbar/>\n    </div>\n\nconst apiKey = \"AIzaSyDK1QaBfQA_oRqsi4sArV5jrJkqc5wT8FY\"\n\nconst MODEL_NAME = \"gemini-1.5-pro-latest\";\nconst API_KEY = apiKey;\n\nasync function newchat(prompt) {\n  const genAI = new GoogleGenerativeAI(API_KEY);\n  const model = genAI.getGenerativeModel({ model: MODEL_NAME });\n\n  const generationConfig = {\n    temperature: 1,\n    topK: 0,\n    topP: 0.95,\n    maxOutputTokens: 8192,\n  };\n\n  const safetySettings = [\n    {\n      category: HarmCategory.HARM_CATEGORY_HARASSMENT,\n      threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,\n    },\n    {\n      category: HarmCategory.HARM_CATEGORY_HATE_SPEECH,\n      threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,\n    },\n    {\n      category: HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,\n      threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,\n    },\n    {\n      category: HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,\n      threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,\n    },\n  ];\n\n  const chat = model.startChat({\n    generationConfig,\n    safetySettings,\n    history: [\n    ],\n  });\n\n  const result = await chat.sendMessage(prompt);\n  const response = result.response;\n  console.log(response.text());\n  return response.text()\n}\n\nexport default newchat;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,4BAA4B;;AAE/C;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;;AAEA,SACEC,kBAAkB,EAClBC,YAAY,EACZC,kBAAkB,QACb,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzB,aAAAA,OAAA;EAAAC,QAAA,eACFD,OAAA,CAACL,MAAM;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACJ,CAAC;AAEV,MAAMC,MAAM,GAAG,yCAAyC;AAExD,MAAMC,UAAU,GAAG,uBAAuB;AAC1C,MAAMC,OAAO,GAAGF,MAAM;AAEtB,eAAeG,OAAOA,CAACC,MAAM,EAAE;EAC7B,MAAMC,KAAK,GAAG,IAAIf,kBAAkB,CAACY,OAAO,CAAC;EAC7C,MAAMI,KAAK,GAAGD,KAAK,CAACE,kBAAkB,CAAC;IAAED,KAAK,EAAEL;EAAW,CAAC,CAAC;EAE7D,MAAMO,gBAAgB,GAAG;IACvBC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE,CAAC;IACPC,IAAI,EAAE,IAAI;IACVC,eAAe,EAAE;EACnB,CAAC;EAED,MAAMC,cAAc,GAAG,CACrB;IACEC,QAAQ,EAAEvB,YAAY,CAACwB,wBAAwB;IAC/CC,SAAS,EAAExB,kBAAkB,CAACyB;EAChC,CAAC,EACD;IACEH,QAAQ,EAAEvB,YAAY,CAAC2B,yBAAyB;IAChDF,SAAS,EAAExB,kBAAkB,CAACyB;EAChC,CAAC,EACD;IACEH,QAAQ,EAAEvB,YAAY,CAAC4B,+BAA+B;IACtDH,SAAS,EAAExB,kBAAkB,CAACyB;EAChC,CAAC,EACD;IACEH,QAAQ,EAAEvB,YAAY,CAAC6B,+BAA+B;IACtDJ,SAAS,EAAExB,kBAAkB,CAACyB;EAChC,CAAC,CACF;EAED,MAAMI,IAAI,GAAGf,KAAK,CAACgB,SAAS,CAAC;IAC3Bd,gBAAgB;IAChBK,cAAc;IACdU,OAAO,EAAE;EAEX,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,MAAMH,IAAI,CAACI,WAAW,CAACrB,MAAM,CAAC;EAC7C,MAAMsB,QAAQ,GAAGF,MAAM,CAACE,QAAQ;EAChCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;EAC5B,OAAOH,QAAQ,CAACG,IAAI,CAAC,CAAC;AACxB;AAEA,eAAe1B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}