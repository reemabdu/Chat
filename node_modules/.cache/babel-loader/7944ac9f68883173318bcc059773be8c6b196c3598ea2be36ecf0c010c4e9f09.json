{"ast":null,"code":"var _jsxFileName = \"/Users/reemabdulglilhassansaleh/Documents/chatbot/src/Components/Botton/Botton.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport * as React from 'react';\nimport botpho from \"../assets/H.png\";\nimport './Botton.css';\nimport { useState } from 'react';\n// import { useHistory } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport newchat from '../../Newchat';\n// import Chat from '../../pages/Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Botton() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [result, setResult] = useState('');\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const Reset = () => {\n    setResult(\"\");\n  };\n  const chatAi = async () => {\n    const RuseltChat = await newchat(input);\n    setResult(RuseltChat);\n    localStorage.setItem(\"res\", RuseltChat);\n    navigate('/Chat');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange,\n        onClick: Reset,\n        placeholder: \"Enter a prompt here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: botpho,\n        alt: \"botpho\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: chatAi,\n        children: \"Ask me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: localStorage.getItem(\"res\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"bottom-info\",\n      children: \"Gemini may display inaccurate info, including about people, so double-check its responses. Your privacy and Gemini Apps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 1\n  }, this);\n}\n_s(Botton, \"639EE6+fPcTYkZQlHaN8y9NWAPc=\", false, function () {\n  return [useNavigate];\n});\n_c = Botton;\nexport default Botton;\n\n// import * as React from 'react';\n// import botpho from \"../assets/H.png\";\n// import './Botton.css';\n// import { useState } from 'react';\n// import newchat from '../../Newchat';\n\n// function Botton() {\n//   const [input, setInput] = useState(\"\");\n//   const [result, setResult] = useState('');\n//   const [showResult, setShowResult] = useState(false); // State to control result visibility\n\n//   const handleChange = (e) => {\n//     setInput(e.target.value);\n//   };\n\n//   const Reset = () => {\n//     setResult(\"\");\n//     setShowResult(false); // Reset the result visibility\n//   };\n\n//   const chatAi = async () => {\n//     const RuseltChat = await newchat(input);\n//     setResult(RuseltChat);\n//     setShowResult(true); // Show the result when the button is clicked\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"search-box\">\n//         <input type=\"text\" onChange={handleChange} onClick={Reset} placeholder=\"Enter a prompt here\"></input>\n//         <button onClick={chatAi}>Ask me</button>\n//       </div>\n//       {showResult && (\n//         <div className=\"resultContainer\"> {/* Use a container for styling */}\n//           <div className=\"result\">{result}</div>\n//           <p className=\"bottom-info\">Gemini may display inaccurate info, including about people, so double-check its responses. Your privacy and Gemini Apps</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Botton;\nvar _c;\n$RefreshReg$(_c, \"Botton\");","map":{"version":3,"names":["React","botpho","useState","useNavigate","newchat","jsxDEV","_jsxDEV","Botton","_s","input","setInput","result","setResult","navigate","handleChange","e","target","value","Reset","chatAi","RuseltChat","localStorage","setItem","children","className","type","onChange","onClick","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","getItem","_c","$RefreshReg$"],"sources":["/Users/reemabdulglilhassansaleh/Documents/chatbot/src/Components/Botton/Botton.js"],"sourcesContent":["// import logo from './logo.svg';\nimport * as React from 'react';\nimport botpho from \"../assets/H.png\";\nimport './Botton.css';\nimport { useState } from 'react';\n// import { useHistory } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport newchat from '../../Newchat';\n// import Chat from '../../pages/Chat';\n\nfunction Botton() {\n    const [input , setInput] = useState(\"\")\n    const [result,setResult] = useState('')\n    const navigate = useNavigate();\n    const handleChange = (e)=>{\n    setInput(e.target.value)\n    }\n    const Reset = ()=>{\n    setResult(\"\")\n    }\n    const chatAi = async () => {\n        const RuseltChat = await newchat(input);\n        setResult(RuseltChat);\n        localStorage.setItem(\"res\",RuseltChat)\n        navigate('/Chat')\n\n      };\n\n    return (\n<div>\n<div className=\"search-box\">\n    <input type=\"text\" onChange={handleChange} onClick={Reset}  placeholder=\"Enter a prompt here\" ></input>\n    <img src={botpho} alt=\"botpho\" />\n    <button onClick={chatAi}>Ask me</button>      \n </div>\n <div className='result'>{localStorage.getItem(\"res\")}</div>\n <p className=\"bottom-info\">Gemini may display inaccurate info, including about people, so double-check its responses. Your privacy and Gemini Apps</p></div>\n   \n        );\n}\n\nexport default Botton;\n\n\n\n\n// import * as React from 'react';\n// import botpho from \"../assets/H.png\";\n// import './Botton.css';\n// import { useState } from 'react';\n// import newchat from '../../Newchat';\n\n// function Botton() {\n//   const [input, setInput] = useState(\"\");\n//   const [result, setResult] = useState('');\n//   const [showResult, setShowResult] = useState(false); // State to control result visibility\n\n//   const handleChange = (e) => {\n//     setInput(e.target.value);\n//   };\n\n//   const Reset = () => {\n//     setResult(\"\");\n//     setShowResult(false); // Reset the result visibility\n//   };\n\n//   const chatAi = async () => {\n//     const RuseltChat = await newchat(input);\n//     setResult(RuseltChat);\n//     setShowResult(true); // Show the result when the button is clicked\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"search-box\">\n//         <input type=\"text\" onChange={handleChange} onClick={Reset} placeholder=\"Enter a prompt here\"></input>\n//         <button onClick={chatAi}>Ask me</button>\n//       </div>\n//       {showResult && (\n//         <div className=\"resultContainer\"> {/* Use a container for styling */}\n//           <div className=\"result\">{result}</div>\n//           <p className=\"bottom-info\">Gemini may display inaccurate info, including about people, so double-check its responses. Your privacy and Gemini Apps</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Botton;"],"mappings":";;AAAA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAO,cAAc;AACrB,SAASC,QAAQ,QAAQ,OAAO;AAChC;AACA,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,eAAe;AACnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAGC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACS,MAAM,EAACC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,YAAY,GAAIC,CAAC,IAAG;IAC1BL,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACxB,CAAC;EACD,MAAMC,KAAK,GAAGA,CAAA,KAAI;IAClBN,SAAS,CAAC,EAAE,CAAC;EACb,CAAC;EACD,MAAMO,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,MAAMC,UAAU,GAAG,MAAMhB,OAAO,CAACK,KAAK,CAAC;IACvCG,SAAS,CAACQ,UAAU,CAAC;IACrBC,YAAY,CAACC,OAAO,CAAC,KAAK,EAACF,UAAU,CAAC;IACtCP,QAAQ,CAAC,OAAO,CAAC;EAEnB,CAAC;EAEH,oBACJP,OAAA;IAAAiB,QAAA,gBACAjB,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBjB,OAAA;QAAOmB,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEZ,YAAa;QAACa,OAAO,EAAET,KAAM;QAAEU,WAAW,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACvG1B,OAAA;QAAK2B,GAAG,EAAEhC,MAAO;QAACiC,GAAG,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjC1B,OAAA;QAAQqB,OAAO,EAAER,MAAO;QAAAI,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACN1B,OAAA;MAAKkB,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAEF,YAAY,CAACc,OAAO,CAAC,KAAK;IAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3D1B,OAAA;MAAGkB,SAAS,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAuH;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAG7J;AAACxB,EAAA,CA7BQD,MAAM;EAAA,QAGMJ,WAAW;AAAA;AAAAiC,EAAA,GAHvB7B,MAAM;AA+Bf,eAAeA,MAAM;;AAKrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}